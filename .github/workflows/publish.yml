# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package
on:
  release:
    types: [created]
jobs:
  create_python_package:
    runs-on: ubuntu-latest
    name: 'Create python package'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: 'Read commit args'
        id: args
        uses: LamaAni/parse-commit-args-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          VERSION: '${{steps.args.outputs.version}}'
        run: |
          cd python
          python setup.py sdist bdist_wheel
          twine upload dist/*

  create_node_js_docker:
    runs-on: ubuntu-latest
    name: 'Create nodejs docker'
    steps:
      - name: 'Read commit args'
        id: args
        uses: LamaAni/parse-commit-args-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v2

      - name: 'build & push'
        run: |
          docker/nodejs/build
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: lamaani
          DOCKER_REPOSITORY: lamaani/stratis
          IMAGE_TAGS: "${{ steps.args.outputs.versions }} latest"
