# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Build and Run
on:
  push:
    branches:
      - "*"
  release:
    types:
      - prereleased
      - released
jobs:
  publish-to-github-as-npm:
    name: "(RE) Publish to github as npm package"
    runs-on: ubuntu-latest
    steps:
      - name: "setup nodejs"
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
          registry-url: "https://npm.pkg.github.com"
          scope: "@lamaani"

      - name: "checkout the code"
        uses: actions/checkout@v2

      - name: "Read commit args"
        id: args
        uses: LamaAni/parse-commit-args-action@master

      - name: Apply current version
        if: ${{ steps.args.outputs.is_release=='true' || steps.args.outputs.is_prerelease=='true'}}
        run: |
          npm version '${{steps.args.outputs.version}}' &&

      - name: "Publish version to github"
        if: ${{ steps.args.outputs.is_release=='true' || steps.args.outputs.is_prerelease=='true'}}
        run: |
          echo "Publishing version ${{steps.args.outputs.version}}" &&
          git config --global user.email "actions@no-a-server.com" &&
          git config --global user.name "github actions" &&
          git fetch &&
          git checkout master &&
          git pull &&
          npm version '${{steps.args.outputs.version}}' &&
          npm publish && 
          git push origin HEAD
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create_node_binaries:
    runs-on: ubuntu-latest
    name: "Create nodejs binaries"
    needs:
      - publish-to-github-as-npm
    steps:
      - name: "setup nodejs"
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
          registry-url: "https://npm.pkg.github.com"
          scope: "@lamaani"

      - name: Checkout
        uses: actions/checkout@v2

      - name: "Read commit args"
        id: args
        uses: LamaAni/parse-commit-args-action@master

      - name: Apply current version
        if: ${{ steps.args.outputs.is_release=='true' || steps.args.outputs.is_prerelease=='true'}}
        run: |
          npm version '${{steps.args.outputs.version}}' &&

      - name: Install required packages
        run: |
          npm install pkg
          npm install

      - name: Compile binaries
        run: |
          node_modules/.bin/pkg .

      - name: "Release: upload binary files"
        if: ${{ steps.args.outputs.is_release=='true' || steps.args.outputs.is_prerelease=='true'}}
        uses: AButler/upload-release-assets@v2.0
        with:
          files: ".local/bin/*"
          release-tag: "${{steps.args.outputs.version}}"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  create_node_js_docker:
    runs-on: ubuntu-latest
    name: "Create nodejs docker"
    needs:
      - publish-to-github-as-npm
    steps:
      - name: "Read commit args"
        id: args
        uses: LamaAni/parse-commit-args-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v2

      - name: Apply current version
        if: ${{ steps.args.outputs.is_release=='true' || steps.args.outputs.is_prerelease=='true'}}
        run: |
          npm version '${{steps.args.outputs.version}}' &&

      - name: "build & push"
        if: ${{ steps.args.outputs.is_release=='true' || steps.args.outputs.is_prerelease=='true'}}
        run: |
          docker/build
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: lamaani
          DOCKER_REPOSITORY: lamaani/stratis
          IMAGE_TAGS: "${{ steps.args.outputs.versions }} latest"
